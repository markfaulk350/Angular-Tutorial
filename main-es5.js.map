{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","length","includeSymbols","includeLetters","includeNumbers","password","val","parsedVal","parseInt","isNaN","numbers","letters","symbols","validChars","generatedPass","i","index","Math","floor","random","onChangeLength","onChangeUseLetters","onChangeUseNumbers","onChangeUseSymbols","onButtonClick","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  length = 0;\n  includeSymbols = false;\n  includeLetters = false;\n  includeNumbers = false;\n  password = '';\n\n  onChangeLength(val: string) {\n    const parsedVal = parseInt(val);\n\n    if (!isNaN(parsedVal)) {\n      this.length = parsedVal;\n    }\n  }\n  onChangeUseLetters() {\n    this.includeLetters = !this.includeLetters;\n  }\n  onChangeUseNumbers() {\n    this.includeNumbers = !this.includeNumbers;\n  }\n  onChangeUseSymbols() {\n    this.includeSymbols = !this.includeSymbols;\n  }\n  onButtonClick() {\n    const numbers = '1234567890';\n    const letters = 'qwertyuioplkjhgfdsazxcvbnm';\n    const symbols = '!@#$%^&*()';\n\n    let validChars = '';\n\n    if (this.includeLetters) {\n      validChars += letters;\n    }\n    if (this.includeNumbers) {\n      validChars += numbers;\n    }\n    if (this.includeSymbols) {\n      validChars += symbols;\n    }\n\n    let generatedPass = '';\n    for (let i = 0; i < this.length; i++) {\n      const index = Math.floor(Math.random() * validChars.length);\n      generatedPass += validChars[index];\n    }\n    \n    this.password = generatedPass;\n  }\n}\n","<h1>Password Generator</h1>\n\n<div>\n  <label>Enter length</label>\n  <input (input)=\"onChangeLength($event.target.value)\" type=\"text\">\n</div>\n\n<div>\n  <label>Use Letters</label>\n  <input (change)=\"onChangeUseLetters()\" type=\"checkbox\">\n</div>\n\n<div>\n  <label>Use Numbers</label>\n  <input (change)=\"onChangeUseNumbers()\" type=\"checkbox\">\n</div>\n\n<div>\n  <label>Use Symbols</label>\n  <input (change)=\"onChangeUseSymbols()\" type=\"checkbox\">\n</div>\n\n<div>\n  <button \n  [disabled]=\"!(length && (includeLetters || includeNumbers || includeSymbols))\" \n  (click)=\"onButtonClick()\">Generate!</button>\n</div>\n\n<div *ngIf=\"password\">\n  <label>Your Password</label>\n  <input [value]=\"password\" type=\"text\">\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}